#!/usr/bin/env ruby
# Copyright (c) 2021 Alexandre ZANNI (noraj)

if ARGV.length != 2
  puts "Invalid argument count"
  exit
end

require 'json'
require 'kramdown'

vulnrepo_file = ARGV[0]
reconmap_file = ARGV[1]

vulnrepo_data = JSON.parse(File.read(vulnrepo_file))
reconmap_data = {
  :vulnerability_templates => []
}

vulnrepo_data.each do |fromobj|
  toobj = {
    'summary' => fromobj['title'],
    'description' => fromobj['desc'],
    'proof_of_concept' => fromobj['poc'],
    'references' => fromobj['ref'],
    'remediation' => nil,
    'impact' => nil,
    'solution' => nil,
    'risk' => 'medium',
    'cvss_score' => fromobj['cvss'],
    'cvss_vector' => nil,
    'tags' => nil,
    'category_id' => nil,
    'category_name' => nil,
    'is_template' => true,
  }
  reconmap_data[:vulnerability_templates].push(toobj)
end

File.open(reconmap_file, 'w') do |file|
  JSON.dump(reconmap_data, file)
end

